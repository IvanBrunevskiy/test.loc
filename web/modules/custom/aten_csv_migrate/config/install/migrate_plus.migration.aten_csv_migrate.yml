id: aten_csv_migrate
label: 'country'
# Группы добавляются модулем Migrate Plus, это его настройка.
migration_group: dummy
# Данная настройка не обзятельна и позволяет задавать теги миграциям.
# Например, вы можете сделать два источника для пользоватетелей из разных мест
# пометить тегами user и запускать их на выполнение одновременно при помощи
# общего тега.
migration_tags:
  - country
# Описываем источник данных.
source:
  # Тип плагина при помощи которого получаются данные.
  plugin: csv
  # Его настройки.
  path: modules/custom/aten_csv_migrate/sources/countries.csv
  delimiter: ';'
  # Так как первая строка используется для заголовков в файле, мы должны её
  # пропускать, чтобы они не ушли на импорт.
  header_row_count: 1
  column_names:
    0:
      tid: 'ID'
    1:
      name: 'Country'
  # Ключи данного источника. Данный плагин требует указание ключей в виде
  # массива, так что даже единственный ключ должен объявляться как массив.
  keys:
    - tid
  - ids:
      ID:
          type: integer
process:
  tid: ID
  name: name
# Описываем то, куда эти данные должны быть смигрированы.
destination:
  plugin: entity:taxonomy_term
# В данном разделе указывается от каких миграций зависит текущая. У нас данная
# миграция не зависит от други, поэтому оставляем значением пустым массивом.
migration_dependencies: {}
# В данном разделе мы указываем от каких модулей зависит данная миграция,
# включая текущий. Так, при удалении модуля, удалятся и даныне конфигурации
# и при следующем включении не будет конфликта что уже имеются данные
# кофигурации. В случае со сторонними модулями, не будет проблемы что нет
# какого-то плагина. Это больше от Configuration API чем от миграций.
dependencies:
  enforced:
    module:
      - aten_csv_migrate
      - migrate_source_csv
